name: C++ Build
on:
  push:
    branches-ignore:
      - "master"
jobs:
  cmake-build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          git submodule sync --recursive
          git submodule update --init --force --recursive --depth=50
      - uses: ilammy/msvc-dev-cmd@v1.2.0
      - name: Install Python 3.7 version
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
          architecture: "x64"
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.5.2
        with:
          version: 5.12.7
      - name: macos install deps
        if: matrix.os == 'macOS-latest'
        env:
          CC: clang
          CXX: clang++
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.12
          brew install boost glm
      - name: macos build and test
        if: matrix.os == 'macOS-latest'
        env:
          CC: clang
          CXX: clang++
        run: |
          export MACOSX_DEPLOYMENT_TARGET=10.12
          mkdir ./build
          cd build
          cmake ..
          cmake --build . --target agave_test --config Release
          sudo cmake --build . --target install --config Release
          zip -vr agave-macos.zip agave.app/
        shell: bash
      - name: Upload mac artifact
        if: matrix.os == 'macOS-latest'
        uses: actions/upload-artifact@v1
        with:
          name: agave-macos
          path: ./build/agave-macos.zip
      - name: linux install deps
        if: matrix.os == 'ubuntu-latest'
        env:
          CC: gcc
          CXX: g++
        run: |
          sudo apt-get install libboost-all-dev libglm-dev libgl1-mesa-dev
      - name: linux build and test
        if: matrix.os == 'ubuntu-latest'
        env:
          CC: gcc
          CXX: g++
        run: |
          pwd
          mkdir ./build
          cd build
          cmake ..
          cmake --build . --target agave_test --config Release
          cmake --build . --target install --config Release
        shell: bash
      - name: windows install deps
        if: matrix.os == 'windows-latest'
        env:
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          vcpkg install --triplet x64-windows glm zlib libjpeg-turbo liblzma
      - name: windows build and test
        if: matrix.os == 'windows-latest'
        env:
          BOOST_ROOT: ${BOOST_ROOT_1_72_0}
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_TOOLCHAIN_FILE="%VCPKG_INSTALLATION_ROOT%\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows -A x64 ..
          cmake --build . --target agave_test --config Release
          cmake --build . --target install --config Release
          powershell Compress-Archive -Path .\agave-install -DestinationPath agave-win.zip
        shell: cmd
      - name: Upload windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v1
        with:
          name: agave-win
          path: ./build/agave-win.zip
